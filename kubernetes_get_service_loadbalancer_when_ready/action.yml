name: 'Wait for External IP and Save as Artifact'
description: 'Waits for an external IP to be assigned to a Kubernetes service or ingress and saves it as an artifact.'
author: 'Grant Zukel'
branding:
  icon: cloud
  color: gray-dark
inputs:
  resource_type:
    description: 'The type of Kubernetes resource (service or ingress).'
    required: true
  resource_name:
    description: 'The name of the Kubernetes resource (service or ingress).'
    required: true
  namespace:
    description: 'The namespace of the Kubernetes resource.'
    required: true
    default: 'default'
  timeout:
    description: 'The timeout in seconds to wait for the external IP.'
    required: true
    default: 600
  sleep_interval:
    description: 'The interval in seconds between checks for the external IP.'
    required: true
    default: 10
  kubeconfig_location:
    description: 'The location of the Kubernetes config file.'
    required: true
runs:
  env:
    KUBECONFIG: "${{ inputs.kubeconfig_location }}"
  using: 'composite'
  steps:
    - name: "CHECKOUT:REPOSITORY"
      uses: actions/checkout@v4

    - name: "INSTALL:KUBECTL"
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: "WAIT:FOR:EXTERNAL:IP"
      id: wait-for-ip
      run: |
        RESOURCE_TYPE="${{ inputs.resource_type }}"
        RESOURCE_NAME="${{ inputs.resource_name }}"
        NAMESPACE="${{ inputs.namespace }}"
        TIMEOUT=${{ inputs.timeout }}
        SLEEP_INTERVAL=${{ inputs.sleep_interval }}
        EXTERNAL_IP=""

        end=$((SECONDS+TIMEOUT))
        while [ $SECONDS -lt $end ]; do
          if [ "$RESOURCE_TYPE" == "service" ]; then
            EXTERNAL_IP=$(kubectl get svc $RESOURCE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          elif [ "$RESOURCE_TYPE" == "ingress" ]; then
            EXTERNAL_IP=$(kubectl get ingress $RESOURCE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          else
            echo "Error: Unknown resource type $RESOURCE_TYPE"
            exit 1
          fi

          if [ -n "$EXTERNAL_IP" ]; then
            echo "External IP assigned: $EXTERNAL_IP"
            break
          fi

          echo "Waiting for external IP..."
          sleep $SLEEP_INTERVAL
        done

        if [ -z "$EXTERNAL_IP" ]; then
          echo "Error: Timed out waiting for external IP"
          exit 1
        fi

        echo "EXTERNAL_IP=$EXTERNAL_IP" >> ${GITHUB_ENV}
        echo $EXTERNAL_IP > EXTERNAL_IP.txt

    - name: "UPLOAD:ARTIFACT"
      uses: actions/upload-artifact@v2
      with:
        name: external-ip
        path: EXTERNAL_IP.txt
